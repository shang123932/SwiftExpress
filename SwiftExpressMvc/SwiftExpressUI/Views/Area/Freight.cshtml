@{
    ViewBag.Title = "Freight";
}
<head>
    <meta charset="utf-8">
    <title>Layui</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <link href="~/layui/css/layui.css" rel="stylesheet" />
    <!-- 注意：如果你直接复制所有代码到本地，上述css路径需要改成你本地的 -->
</head>
<body>
    <div style="margin-left:150px;">
        <div style="width:1000px;height:500px; border:1px solid  #808080;line-height:40px;">
            <div style="margin-top:20px;margin-left:40px;">
                <h3>运费时效查询</h3>
            </div>
            <div style="margin-top:20px;margin-left:80px;">
                <div class="layui-form-item">
                    <div>
                        <span>原寄地：</span>
                    </div>
                    <div class="layui-input-inline">
                        <select id="quiz1" onchange="Q1()">
                            <option value="0">请选择省</option>

                        </select>
                    </div>
                    <div class="layui-input-inline">
                        <select id="quiz2" onchange="F1()">
                            <option value="0">请选择市</option>

                        </select>
                    </div>
                    <input id="Hid1" type="hidden"  />

                </div>
                <div class="layui-form-item">
                    <div>
                        <span>目的地：</span>
                    </div>
                    <div class="layui-input-inline">
                        <select id="quiz3" onchange="Q2()">
                            <option value="0">请选择省</option>

                        </select>
                    </div>
                    <div class="layui-input-inline">
                        <select id="quiz4" onchange="F2()">
                            <option value="0">请选择市</option>

                        </select>
                    </div>
                    <input id="Hid2" type="hidden" />
                </div>
            </div>

            <div style="margin-top:20px;margin-left:80px;">
                <div>
                    <span>物品重量：</span>
                    <input id="cweight" type="text" name="username" lay-verify="required" placeholder="请输入" autocomplete="off" class="layui-input">
                </div>
                <div>
                    <div class="layui-input-inline">
                        <span>寄出时间：</span>
                        <input type="text" class="layui-input" id="test30" placeholder="yyyy-MM-dd">
                    </div>
                </div>
                <div style="margin-top:20px;float:right;margin-right:40px;">
                    <button type="button" class="layui-btn layui-btn-primary layui-btn-radius" onclick="Fre()">查询</button>
                </div>
            </div>

        </div>
        <div style="font-size:medium;width:900px;margin-top:50px;line-height:40px;">
            <br>
            <h4 style="font-weight: bold;">一、运费计算基于以下计费规则：</h4>
            <br>
            <h5 style="font-weight:bold;">1.  体积重量计算方法</h5>

            托寄物的计费重量取体积重量与实际重量两者之间的较大值，体积重量的计算方法为：

            <br>【顺丰即日/次晨/标快】

            <br>同城、省内件以及经济区域内互寄，体积重量=长(CM)×宽(CM)×高(CM)÷12000；

            <br>省外跨经济区域互寄，体积重量=长(CM)×宽(CM)×高(CM)÷6000；(经济区域包含：京津冀区域，江浙沪皖区域,，川渝区域，黑吉辽区域)

            <br>【顺丰标快（陆运）】 体积重量=长(CM)×宽(CM)×高(CM)÷12000；

            <br>【重货包裹/小票零担/冷运速配/冷运特惠】 体积重量=长(CM)×宽(CM)×高(CM)÷6000；

            <br>【冷运零担】 体积重量=长(CM)×宽(CM)×高(CM)÷3000；

            <br>【港澳台（服务）】 体积重量=长(CM)×宽(CM)×高(CM)÷6000

            <br>【国际快递（服务）】体积重量=长(CM)×宽(CM)×高(CM) ÷5000

            <br>其他产品计算方法请致电95338或咨询当地收派员。
            <br>
            <br>
            <h5 style="font-weight:bold;"> 2. 计费重量小数点进位处理方式</h5>
            【中国内地互寄业务】100KG以下，续重以0.5KG为计重单位，不足0.5kg，按0.5kg计；100KG及以上，四舍五入取整数。

            <br>【港澳本地业务】续重以0.5KG为计重单位，不足0.5kg，按0.5kg计。

            <br>【中国内地始发至港澳台业务】100KG以下, 续重以0.5KG为计重单位，不足0.5kg，按0.5kg计；100KG及以上，以1KG为计重单位，小数点后尾数大于零的，向上进位至下一个1KG。

            <br>【中国内地始发至海外国家及地区业务】20KG以下, 续重以0.5KG为计重单位，不足0.5kg，按0.5kg计；20KG及以上，以1KG为计重单位，小数点后尾数大于零的，向上进位至下一个1KG。
            <br>
            <br>
            <h5 style="font-weight:bold;">3. 运费计算结果处理方式</h5>

            - 运费计算结果按四舍五入取整数值；

            <br>- 不同产品起始重量各有差异，不足起重的快件将按起重计费并显示。

            <br>以上计费规则可能因服务（产品）或所在地区不同而有所差异，详情致电95338或与当地收派员进行咨询。
            <br>
            <br>
            <h4 style="font-weight:bold;">温馨提示：</h4>
            <br>
            <h5 style="font-weight:bold;">一、时效标准</h5>

            <span>1、预计时效因节假日、天气、交通管控、资源等原因不同日期时间查询会有所差异，具体以系统实时返回为准。</span>
            <br>
            <br>
            <h5 style="font-weight:bold;">二、始发地或目的地任一方为港澳台地区：</h5>

            1、此价格供参考。更多收费和服务详情，详情请致电中国内地客户服务热线 95338。

            <br>2、中国台湾地区寄往中国内地的特殊包裹品项及价格请按此查询，参考时效在顺丰标快产品基础上加时3-5天；。

            <br> 3、对于约定由收件人或第三方付费（含运费及增值服务费）的快件，在快件签收之前，可提出对费用付款方式变更为寄方付。对于需要更改付款方式的快件，寄件人除需要支付运费外，每票需另外支付更改付款方式服务费。详见具体收费标准。

            <br> 4、如收派件地址为香港地区偏远地区，收派件时效需加1个工作日。

            <br>5、中国台湾地区部分地区收派时效需加0.5-1工作日，可按此查阅详情。

            <br>6、以上由中国香港、中国澳门及中国台湾地区寄件至中国内地，以及中国港澳台地区之间互寄,运费已包含燃油附加费。燃油附加费说明请按此了解。
            <br>
            <br>
            <h5 style="font-weight:bold;">三、始发地或目的地任一方为海外国家:</h5>

            1、以上查询的流向价格与时效仅供参考。具体服务及收费详情，请致电国际业务客服专线9533883.

            <br>2、以上查询的流向运费已包含燃油附加费（请按此了解更多燃油附加费的资料），但未包含清关税费、偏远地区附加费、住宅派送附加费、特殊处理费等可能产生的其他费用。

            <br>3、时效标准天数是指工作日，不包含收件日，不包括周末和节假日。具体派送时效以目的地邮编为准。如遇偏远地区或郊区、航班延误、清关异常等情形，时效会额外增加。时效为参考时效，非承诺时效。

            <br>4、在清关资料齐全且不存在自扣与海关扣等风险或异常的情况，以下情况需在参考时效的基础上增加时长：中国内地、港澳台进口的个人物品和正式报关货件增加1-2个工作日，中国内地进口的分运行李货件增加2-4个工作日，中国内地、港澳台出口的正式报关货件增加1个工作日，海外国家进口的正式报关货件增加2-3个工作日。

            <br>5、为降低因收发件人信息、申报品名不完整或错误及申报价值不符等原因导致的清关风险；收发件人信息必须真实有效，托寄物品名需写明材质和用途，托寄物价值必须如实申报。如因以上原因造成的查验延误，及产生的相关所有费用将与相关税费一起向寄件人或者收件人收取。
        </div>
    </div>

</body>
<script src="~/layui/layui.js"></script>
<script src="~/Scripts/jquery-3.3.1.js"></script>

<script>
    layui.use('laydate', function () {
        var laydate = layui.laydate;

        //常规用法
        laydate.render({
            elem: '#test1'
        });

        //国际版
        laydate.render({
            elem: '#test1-1'
            , lang: 'en'
        });

        //年选择器
        laydate.render({
            elem: '#test2'
            , type: 'year'
        });

        //年月选择器
        laydate.render({
            elem: '#test3'
            , type: 'month'
        });

        //时间选择器
        laydate.render({
            elem: '#test4'
            , type: 'time'
        });

        //日期时间选择器
        laydate.render({
            elem: '#test5'
            , type: 'datetime'
        });

        //日期范围
        laydate.render({
            elem: '#test6'
            , range: true
        });

        //年范围
        laydate.render({
            elem: '#test7'
            , type: 'year'
            , range: true
        });

        //年月范围
        laydate.render({
            elem: '#test8'
            , type: 'month'
            , range: true
        });

        //时间范围
        laydate.render({
            elem: '#test9'
            , type: 'time'
            , range: true
        });

        //日期时间范围
        laydate.render({
            elem: '#test10'
            , type: 'datetime'
            , range: true
        });

        //自定义格式
        laydate.render({
            elem: '#test11'
            , format: 'yyyy年MM月dd日'
        });
        laydate.render({
            elem: '#test12'
            , format: 'dd/MM/yyyy'
        });
        laydate.render({
            elem: '#test13'
            , format: 'yyyyMMdd'
        });
        laydate.render({
            elem: '#test14'
            , type: 'time'
            , format: 'H点m分'
        });
        laydate.render({
            elem: '#test15'
            , type: 'month'
            , range: '~'
            , format: 'yyyy-MM'
        });
        laydate.render({
            elem: '#test16'
            , type: 'datetime'
            , range: '到'
            , format: 'yyyy年M月d日H时m分s秒'
        });

        //开启公历节日
        laydate.render({
            elem: '#test17'
            , calendar: true
        });

        //自定义重要日
        laydate.render({
            elem: '#test18'
            , mark: {
                '0-10-14': '生日'
                , '0-12-31': '跨年' //每年的日期
                , '0-0-10': '工资' //每月某天
                , '0-0-15': '月中'
                , '2017-8-15': '' //如果为空字符，则默认显示数字+徽章
                , '2099-10-14': '呵呵'
            }
            , done: function (value, date) {
                if (date.year === 2017 && date.month === 8 && date.date === 15) { //点击2017年8月15日，弹出提示语
                    layer.msg('这一天是：中国人民抗日战争胜利72周年');
                }
            }
        });

        //限定可选日期
        var ins22 = laydate.render({
            elem: '#test-limit1'
            , min: '2016-10-14'
            , max: '2080-10-14'
            , ready: function () {
                ins22.hint('日期可选值设定在 <br> 2016-10-14 到 2080-10-14');
            }
        });

        //前后若干天可选，这里以7天为例
        laydate.render({
            elem: '#test-limit2'
            , min: -7
            , max: 7
        });

        //限定可选时间
        laydate.render({
            elem: '#test-limit3'
            , type: 'time'
            , min: '09:30:00'
            , max: '17:30:00'
            , btns: ['clear', 'confirm']
        });

        //同时绑定多个
        lay('.test-item').each(function () {
            laydate.render({
                elem: this
                , trigger: 'click'
            });
        });

        //初始赋值
        laydate.render({
            elem: '#test19'
            , value: '1989-10-14'
            , isInitValue: true
        });

        //选中后的回调
        laydate.render({
            elem: '#test20'
            , done: function (value, date) {
                layer.alert('你选择的日期是：' + value + '<br>获得的对象是' + JSON.stringify(date));
            }
        });

        //日期切换的回调
        laydate.render({
            elem: '#test21'
            , change: function (value, date) {
                layer.msg('你选择的日期是：' + value + '<br><br>获得的对象是' + JSON.stringify(date));
            }
        });
        //不出现底部栏
        laydate.render({
            elem: '#test22'
            , showBottom: false
        });

        //只出现确定按钮
        laydate.render({
            elem: '#test23'
            , btns: ['confirm']
        });

        //自定义事件
        laydate.render({
            elem: '#test24'
            , trigger: 'mousedown'
        });

        //点我触发
        laydate.render({
            elem: '#test25'
            , eventElem: '#test25-1'
            , trigger: 'click'
        });

        //双击我触发
        lay('#test26-1').on('dblclick', function () {
            laydate.render({
                elem: '#test26'
                , show: true
                , closeStop: '#test26-1'
            });
        });

        //日期只读
        laydate.render({
            elem: '#test27'
            , trigger: 'click'
        });

        //非input元素
        laydate.render({
            elem: '#test28'
        });

        //墨绿主题
        laydate.render({
            elem: '#test29'
            , theme: 'molv'
        });

        //自定义颜色
        laydate.render({
            elem: '#test30'
            , theme: '#393D49'
        });

        //格子主题
        laydate.render({
            elem: '#test31'
            , theme: 'grid'
        });


        //直接嵌套显示
        laydate.render({
            elem: '#test-n1'
            , position: 'static'
        });
        laydate.render({
            elem: '#test-n2'
            , position: 'static'
            , lang: 'en'
        });
        laydate.render({
            elem: '#test-n3'
            , type: 'month'
            , position: 'static'
        });
        laydate.render({
            elem: '#test-n4'
            , type: 'time'
            , position: 'static'
        });
    });

    layui.use(['form', 'layedit', 'laydate'], function () {
        var form = layui.form
            , layer = layui.layer
            , layedit = layui.layedit
            , laydate = layui.laydate;

        //日期
        laydate.render({
            elem: '#date'
        });
        laydate.render({
            elem: '#date1'
        });

        //创建一个编辑器
        var editIndex = layedit.build('LAY_demo_editor');

        //自定义验证规则
        form.verify({
            title: function (value) {
                if (value.length < 5) {
                    return '标题至少得5个字符啊';
                }
            }
            , pass: [
                /^[\S]{6,12}$/
                , '密码必须6到12位，且不能出现空格'
            ]
            , content: function (value) {
                layedit.sync(editIndex);
            }
        });

        //监听指定开关
        form.on('switch(switchTest)', function (data) {
            layer.msg('开关checked：' + (this.checked ? 'true' : 'false'), {
                offset: '6px'
            });
            layer.tips('温馨提示：请注意开关状态的文字可以随意定义，而不仅仅是ON|OFF', data.othis)
        });

        //监听提交
        form.on('submit(demo1)', function (data) {
            layer.alert(JSON.stringify(data.field), {
                title: '最终的提交信息'
            })
            return false;
        });

        //表单赋值
        layui.$('#LAY-component-form-setval').on('click', function () {
            form.val('example', {
                "username": "贤心" // "name": "value"
                , "password": "123456"
                , "interest": 1
                , "like[write]": true //复选框选中状态
                , "close": true //开关状态
                , "sex": "女"
                , "desc": "我爱 layui"
            });
        });

        //表单取值
        layui.$('#LAY-component-form-getval').on('click', function () {
            var data = form.val('example');
            alert(JSON.stringify(data));
        });

    });

    $().ready(function () {
        //获取原寄地的省份
        $.ajax({
            url: "/Area/Province",
            type: "POST",
            dataType: "json",
            success: function (res) {
                var ops = "";
                $(res.arealist).each(function () {
                    var op = "<option value='" + this.SId + "'>" + this.SName + "</option>";
                    ops += op;
                })
                $("#quiz1").append(ops);
            }
        })
        //获取目的地的省份
        $.ajax({
            url: "/Area/Province",
            type: "POST",
            dataType: "json",
            success: function (res) {
                var ops = "";
                $(res.arealist).each(function () {
                    var op = "<option value='" + this.SId + "'>" + this.SName + "</option>";
                    ops += op;
                })
                $("#quiz3").append(ops);
            }
        })
    })

    //获取原寄地的市区
    function Q1() {
        var id = $("#quiz1").val();
        $.ajax({
            url: "/Area/City",
            type: "POST",
            dataType: "json",
            data:
            {
                PId: id
            },
            success: function (res) {
                var ops = "";
                $(res.Alist).each(function () {
                    var op = "<option value='" + this.SId + "'>" + this.SName + "</option>";
                    ops += op;
                })
                $("#quiz2").append(ops);
            }
        })
    }

    //获取目的地的市区
    function Q2() {
        var id = $("#quiz3").val();
        $.ajax({
            url: "/Area/City",
            type: "POST",
            dataType: "json",
            data:
            {
                PId: id
            },
            success: function (res) {
                var ops = "";
                $(res.Alist).each(function () {
                    var op = "<option value='" + this.SId + "'>" + this.SName + "</option>";
                    ops += op;
                })
                $("#quiz4").append(ops);
            }
        })
    }

    //获取原寄地did
    function F1() {
        var f1 = $("#quiz2").val();
        $.ajax({
            url: "/Area/CityDid",
            type: "POST",
            dataType: "json",
            data:
            {
                did: f1
            },
            success: function (res) {
                if (res.Status) {
                    $("#Hid1").val(res.fid);
                } else {
                    alert(res.Message);
                    F1();
                }
            }
        })
    }

    //获取目的地did
    function F2() {
        var f2 = $("#quiz4").val();
        $.ajax({
            url: "/Area/CityDid",
            type: "POST",
            dataType: "json",
            data:
            {
                did: f2
            },
            success: function (res) {
                if (res.Status) {
                    $("#Hid2").val(res.fid);
                } else {
                    alert(res.Message);
                    F2();
                }
            }
        })
    }


    //运费及到达时间的计算
    function Fre() {
        var f1 = $("#Hid1").val();
        var f2 = $("#Hid2").val();
        var weight = $("#cweight").val();  //快递重量
        var sendday = $("#test30").val();

        var dvalue = 0;//dvalue 差值
        var fare = 0;  //fare 运费
        if ((f1 - f2) > 0) {   //原寄地为附近区域
            dvalue = f1 - f2;//获取差值
            if (dvalue == 1) {//江浙沪费用
                if (weight == 1) {//获取首重8
                    fare = 1 * 8;
                }
                if (weight > 1) {
                    fare = (weight - 1) * 1.5 + 8;//续重1.5
                }
                sendday = sendday + 1;
            }
            if (dvalue == 2 || dvalue == 3) { //其他城市
                if (weight == 1) {//获取首重8
                    fare = 1 * 15;
                }
                if (weight > 1) {
                    fare = (weight - 1) * 12 * dvalue + 15;//续重12
                }
                sendday = sendday + dvalue + 1;
            }

            alert("运费为：" + fare + ",预计到达时间为：" + sendday );

        } else if ((f2 - f1) > 0) {   //原寄地为远地区
            dvalue = f2 - f1;
            if (dvalue == 1) {//江浙沪费用
                if (weight == 1) {//获取首重8
                    fare = 1 * 8;
                    sendday = sendday + 1;
                }
                if (weight > 1) {
                    fare = (weight - 1) * 1.5 + 8;//续重1.5
                }
            }
            if (dvalue == 2 || dvalue == 3) { //其他城市
                if (weight == 1) {//获取首重8
                    fare = 1 * 15;
                }
                if (weight > 1) {
                    fare = (weight - 1) * 12 * dvalue + 15;//续重12
                }
                sendday = sendday + dvalue + 1;
            }
            alert("运费为：" + fare + ",预计到达时间为：" + sendday );
        }
        else if ((f2 - f1) == 0) {
            fare = 8;
            alert("运费为：" + fare + ",预计到达时间为：" + sendday );
        }

    }
</script>
